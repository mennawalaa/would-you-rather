{"ast":null,"code":"import { _saveQuestionAnswer } from '../_DATA.js';\nexport const VOTES = 'VOTES';\nexport const OP1VOTES = 'OP1VOTES';\nexport const OP2VOTES = 'OP2VOTES';\nexport const UPDATEQUESTIONSTATE = 'UPDATEQUESTIONSTATE';\nexport const receiveVotesAction = (authedUser, qid, answer) => {\n  console.log(\"inputs to receiveVotesAction\", authedUser, qid, answer);\n  return {\n    type: VOTES,\n    authedUser,\n    qid,\n    answer\n  };\n};\nexport const updateAnswerdQuestionsAction = (qid, userVote, authedUser) => {\n  return {\n    type: UPDATEQUESTIONSTATE,\n    qid,\n    userVote,\n    authedUser\n  };\n};\nexport const receiveOp1VotesAction = Op1votes => {\n  // console.log(\"recever user action\", users);\n  return {\n    type: OP1VOTES,\n    Op1votes\n  };\n};\nexport const receiveOp2VotesAction = Op2votes => {\n  // console.log(\"recever user action\", users);\n  return {\n    type: OP2VOTES,\n    Op2votes\n  };\n};\nexport const saveuserAnswerAction = (authedUser, qid, ans) => async dispatch => {\n  console.log(\"before dispatching the receiveVotesAction\");\n  dispatch(receiveVotesAction(authedUser, qid, ans)); // let answer = { [qid]: ans }\n\n  const res = await _saveQuestionAnswer({\n    authedUser,\n    qid,\n    answer: ans\n  });\n  dispatch(updateAnswerdQuestionsAction(qid, ans, authedUser));\n};","map":{"version":3,"sources":["C:/Users/menna/OneDrive/Documents/reactnd-project-would-you-rather-starter-master/reactnd-project-would-you-rather-starter-master/would-you-rather/src/actions/votes.js"],"names":["_saveQuestionAnswer","VOTES","OP1VOTES","OP2VOTES","UPDATEQUESTIONSTATE","receiveVotesAction","authedUser","qid","answer","console","log","type","updateAnswerdQuestionsAction","userVote","receiveOp1VotesAction","Op1votes","receiveOp2VotesAction","Op2votes","saveuserAnswerAction","ans","dispatch","res"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,aAApC;AACA,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,KAA6B;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CJ,UAA5C,EAAwDC,GAAxD,EAA6DC,MAA7D;AACA,SAAO;AACHG,IAAAA,IAAI,EAAEV,KADH;AAEHK,IAAAA,UAFG;AAGHC,IAAAA,GAHG;AAIHC,IAAAA;AAJG,GAAP;AAOH,CATM;AAUP,OAAO,MAAMI,4BAA4B,GAAG,CAACL,GAAD,EAAMM,QAAN,EAAgBP,UAAhB,KAA+B;AACvE,SAAO;AACHK,IAAAA,IAAI,EAAEP,mBADH;AAEHG,IAAAA,GAFG;AAGHM,IAAAA,QAHG;AAIHP,IAAAA;AAJG,GAAP;AAMH,CAPM;AAQP,OAAO,MAAMQ,qBAAqB,GAAIC,QAAD,IAAc;AAC/C;AACA,SAAO;AACHJ,IAAAA,IAAI,EAAET,QADH;AAEHa,IAAAA;AAFG,GAAP;AAKH,CAPM;AAQP,OAAO,MAAMC,qBAAqB,GAAIC,QAAD,IAAc;AAC/C;AACA,SAAO;AACHN,IAAAA,IAAI,EAAER,QADH;AAEHc,IAAAA;AAFG,GAAP;AAKH,CAPM;AASP,OAAO,MAAMC,oBAAoB,GAAG,CAACZ,UAAD,EAAaC,GAAb,EAAkBY,GAAlB,KAA0B,MAAOC,QAAP,IAAoB;AAC9EX,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAU,EAAAA,QAAQ,CAACf,kBAAkB,CAACC,UAAD,EAAaC,GAAb,EAAkBY,GAAlB,CAAnB,CAAR,CAF8E,CAG9E;;AACA,QAAME,GAAG,GAAG,MAAMrB,mBAAmB,CAAC;AAClCM,IAAAA,UADkC;AAElCC,IAAAA,GAFkC;AAGlCC,IAAAA,MAAM,EAAEW;AAH0B,GAAD,CAArC;AAKAC,EAAAA,QAAQ,CAACR,4BAA4B,CAACL,GAAD,EAAMY,GAAN,EAAWb,UAAX,CAA7B,CAAR;AAGH,CAZM","sourcesContent":["import { _saveQuestionAnswer } from '../_DATA.js'\r\nexport const VOTES = 'VOTES'\r\nexport const OP1VOTES = 'OP1VOTES'\r\nexport const OP2VOTES = 'OP2VOTES'\r\nexport const UPDATEQUESTIONSTATE = 'UPDATEQUESTIONSTATE'\r\n\r\nexport const receiveVotesAction = (authedUser, qid, answer) => {\r\n    console.log(\"inputs to receiveVotesAction\", authedUser, qid, answer);\r\n    return {\r\n        type: VOTES,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    }\r\n\r\n}\r\nexport const updateAnswerdQuestionsAction = (qid, userVote, authedUser) => {\r\n    return {\r\n        type: UPDATEQUESTIONSTATE,\r\n        qid,\r\n        userVote,\r\n        authedUser,\r\n    }\r\n}\r\nexport const receiveOp1VotesAction = (Op1votes) => {\r\n    // console.log(\"recever user action\", users);\r\n    return {\r\n        type: OP1VOTES,\r\n        Op1votes\r\n    }\r\n\r\n}\r\nexport const receiveOp2VotesAction = (Op2votes) => {\r\n    // console.log(\"recever user action\", users);\r\n    return {\r\n        type: OP2VOTES,\r\n        Op2votes\r\n    }\r\n\r\n}\r\n\r\nexport const saveuserAnswerAction = (authedUser, qid, ans) => async (dispatch) => {\r\n    console.log(\"before dispatching the receiveVotesAction\");\r\n    dispatch(receiveVotesAction(authedUser, qid, ans))\r\n    // let answer = { [qid]: ans }\r\n    const res = await _saveQuestionAnswer({\r\n        authedUser,\r\n        qid,\r\n        answer: ans,\r\n    })\r\n    dispatch(updateAnswerdQuestionsAction(qid, ans, authedUser))\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}