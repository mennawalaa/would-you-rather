{"ast":null,"code":"import { RECEIVE_QUESTIONS, UPDATEQUESTIONSTATE, VOTES } from '../actions/home';\nconst initialState = {};\n/*\r\nupdatequestion = (state, answer, qid, user) => {\r\n    const pos1 = state.questions[qid].optionOne.votes;\r\n    const pos2 = state.questions[qid].optionTwo.votes;\r\n    if (answer === \"optionOne\") {\r\n        state.questions[qid].optionOne.votes.concat(user);\r\n        console.log(\"the new state if optionone\", state);\r\n    } else {\r\n        state.questions[qid].optionTwo.votes.concat(user);\r\n        console.log(\"the new state if optionTwo\", state);\r\n    }\r\n    return state\r\n}\r\n*/\n\nexport const home = (state = initialState, action) => {\n  // console.log(\"welcome to reducer at home function\");\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      //  console.log(\"action user in reducer\", action.questions)\n      return { ...state,\n        questions: action.questions\n      };\n\n    case VOTES:\n      return { ...state,\n        userVote: action.answer\n      };\n\n    case UPDATEQUESTIONSTATE:\n      //this state only has the uservote option errorr\n      console.log(\"the state inside the reducer vote\", state);\n\n      if (action.answer === \"optionOne\") {\n        state.questions[action.qid].optionOne.votes.concat(action.authedUser);\n        console.log(\"the new state if optionone\", state);\n      } else {\n        state.questions[action.qid].optionTwo.votes.concat(action.authedUser);\n        console.log(\"the new state if optionTwo\", state);\n      }\n\n      return state;\n\n    default:\n      //  console.log(\"default\");\n      return state;\n  }\n};\n/*\r\nupdatequestion = (state, answer, qid, user) => {\r\n    const pos1 = state.questions[qid].optionOne.votes;\r\n    const pos2 = state.questions[qid].optionTwo.votes;\r\n    if (answer === \"optionOne\") {\r\n        state.questions[qid].optionOne.votes.concat(user);\r\n        console.log(\"the new state if optionone\", state);\r\n    } else {\r\n        state.questions[qid].optionTwo.votes.concat(user);\r\n        console.log(\"the new state if optionTwo\", state);\r\n    }\r\n    return state\r\n}\r\n*/\n\n/* mn bab el7tyate\r\n   ...state,\r\n                questions: {\r\n                    ...state.questions[action.qid],\r\n                    optionOne: action.answer === \"optionOne\" ? {\r\n                        ...state.questions[action.qid].optionOne.votes.concat(action.authedUser)\r\n                    } : state.questions,\r\n                    optionTwo: action.answer === \"optionTwo\" ? {\r\n                        ...state.questions[action.qid].optionTwo.votes.concat(action.authedUser)\r\n                    } : state.questions\r\n                }\r\n */","map":{"version":3,"sources":["C:/Users/menna/OneDrive/Documents/reactnd-project-would-you-rather-starter-master/reactnd-project-would-you-rather-starter-master/would-you-rather/src/reducers/home.js"],"names":["RECEIVE_QUESTIONS","UPDATEQUESTIONSTATE","VOTES","initialState","home","state","action","type","questions","userVote","answer","console","log","qid","optionOne","votes","concat","authedUser","optionTwo"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,mBAA5B,EAAiDC,KAAjD,QAA8D,iBAA9D;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAmC;AACnD;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,iBAAL;AACI;AACA,aAAO,EACH,GAAGK,KADA;AAEHG,QAAAA,SAAS,EAAEF,MAAM,CAACE;AAFf,OAAP;;AAIJ,SAAKN,KAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,QAAQ,EAAEH,MAAM,CAACI;AAFd,OAAP;;AAIJ,SAAKT,mBAAL;AAAyB;AACrBU,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDP,KAAjD;;AAEA,UAAIC,MAAM,CAACI,MAAP,KAAkB,WAAtB,EAAmC;AAC/BL,QAAAA,KAAK,CAACG,SAAN,CAAgBF,MAAM,CAACO,GAAvB,EAA4BC,SAA5B,CAAsCC,KAAtC,CAA4CC,MAA5C,CAAmDV,MAAM,CAACW,UAA1D;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CP,KAA1C;AACH,OAHD,MAGO;AACHA,QAAAA,KAAK,CAACG,SAAN,CAAgBF,MAAM,CAACO,GAAvB,EAA4BK,SAA5B,CAAsCH,KAAtC,CAA4CC,MAA5C,CAAmDV,MAAM,CAACW,UAA1D;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CP,KAA1C;AACH;;AACD,aAAOA,KAAP;;AAMJ;AACI;AACA,aAAOA,KAAP;AA9BR;AAmCH,CArCM;AAsCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { RECEIVE_QUESTIONS, UPDATEQUESTIONSTATE, VOTES } from '../actions/home'\r\n\r\nconst initialState = {};\r\n/*\r\nupdatequestion = (state, answer, qid, user) => {\r\n    const pos1 = state.questions[qid].optionOne.votes;\r\n    const pos2 = state.questions[qid].optionTwo.votes;\r\n    if (answer === \"optionOne\") {\r\n        state.questions[qid].optionOne.votes.concat(user);\r\n        console.log(\"the new state if optionone\", state);\r\n    } else {\r\n        state.questions[qid].optionTwo.votes.concat(user);\r\n        console.log(\"the new state if optionTwo\", state);\r\n    }\r\n    return state\r\n}\r\n*/\r\n\r\nexport const home = (state = initialState, action,) => {\r\n    // console.log(\"welcome to reducer at home function\");\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            //  console.log(\"action user in reducer\", action.questions)\r\n            return {\r\n                ...state,\r\n                questions: action.questions,\r\n            }\r\n        case VOTES:\r\n            return {\r\n                ...state,\r\n                userVote: action.answer,\r\n            }\r\n        case UPDATEQUESTIONSTATE://this state only has the uservote option errorr\r\n            console.log(\"the state inside the reducer vote\", state);\r\n\r\n            if (action.answer === \"optionOne\") {\r\n                state.questions[action.qid].optionOne.votes.concat(action.authedUser);\r\n                console.log(\"the new state if optionone\", state);\r\n            } else {\r\n                state.questions[action.qid].optionTwo.votes.concat(action.authedUser);\r\n                console.log(\"the new state if optionTwo\", state);\r\n            }\r\n            return state\r\n\r\n\r\n\r\n\r\n\r\n        default:\r\n            //  console.log(\"default\");\r\n            return state\r\n\r\n\r\n    }\r\n\r\n}\r\n/*\r\nupdatequestion = (state, answer, qid, user) => {\r\n    const pos1 = state.questions[qid].optionOne.votes;\r\n    const pos2 = state.questions[qid].optionTwo.votes;\r\n    if (answer === \"optionOne\") {\r\n        state.questions[qid].optionOne.votes.concat(user);\r\n        console.log(\"the new state if optionone\", state);\r\n    } else {\r\n        state.questions[qid].optionTwo.votes.concat(user);\r\n        console.log(\"the new state if optionTwo\", state);\r\n    }\r\n    return state\r\n}\r\n*/\r\n/* mn bab el7tyate\r\n   ...state,\r\n                questions: {\r\n                    ...state.questions[action.qid],\r\n                    optionOne: action.answer === \"optionOne\" ? {\r\n                        ...state.questions[action.qid].optionOne.votes.concat(action.authedUser)\r\n                    } : state.questions,\r\n                    optionTwo: action.answer === \"optionTwo\" ? {\r\n                        ...state.questions[action.qid].optionTwo.votes.concat(action.authedUser)\r\n                    } : state.questions\r\n                }\r\n */"]},"metadata":{},"sourceType":"module"}