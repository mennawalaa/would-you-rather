{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\menna\\\\OneDrive\\\\Documents\\\\reactnd-project-would-you-rather-starter-master\\\\reactnd-project-would-you-rather-starter-master\\\\would-you-rather\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getQuestionsAction, receiveQuestions } from '../actions/home';\nimport { getAllUsersAction, receiveUsers } from '../actions/login';\nimport AnsQuestion from './AnsQuestion';\nimport UnAnsQuestion from './UnAnsQuestion';\nimport NavBar from './NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      unansweredQ: [],\n      hide: false\n    };\n\n    this.unanswered = user => {\n      // console.log(\"data in side function\", this.props.questions);\n      // console.log(\"answered data\", user.answers);\n      const unanswered = [];\n      this.setState({\n        hide: true\n      });\n\n      for (const i in this.props.questions) {\n        //  console.log(\"each un answered question\", i);\n        //  console.log(\"each un answered question option\", this.props.questions[i]);\n        if (user.answers[i] === undefined) {\n          //    console.log(\"this is an unswered question\");\n          unanswered.push(i);\n        }\n      } // console.log(\"the un answered ttt\", unanswered);\n\n\n      this.setState({\n        unansweredQ: unanswered\n      });\n    };\n  }\n\n  componentDidMount() {\n    //get the user id from the adress link\n    const answered = [];\n    console.log(window.location.href);\n    const fulUrl = window.location.href;\n    const lastSlash = fulUrl.lastIndexOf(\"/\");\n    console.log(lastSlash);\n    const id = fulUrl.substr(lastSlash + 1); //  console.log(\"id in home\", id);\n    //or simply\n\n    console.log(this.props.match.params.id); //get all users data\n    //  this.props.getAllUsersAction();\n    //get specific user data using id \n    //console.log(\"component did mount home call\");\n\n    this.props.getAllUsersAction(); // console.log(\"users in home total\", this.props.users);\n\n    this.props.getQuestionsAction(); //console.log(\"users in home total\", this.props.questions);\n  }\n\n  render() {\n    const Id = this.props.match.params.id; //  console.log(\"my try id\", Id);\n    // console.log(\"data in home total\", this.props.users[Id]);\n\n    console.log(\"the user saved to the store\", this.props.loggeduser);\n    let user = this.props.users[this.props.loggeduser]; // console.log(\"my user\", user);\n    // console.log(\"questions\", this.props.questions);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"welcome\", user.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"answered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.questions !== undefined && this.state.hide === false && Object.keys(user.answers).map(answeredQ => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(AnsQuestion, {\n            obj: this.props.questions[answeredQ],\n            vote: user.answers[answeredQ]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)\n        }, answeredQ, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.unanswered(user),\n        children: \"unanswered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.questions !== undefined && this.state.unansweredQ.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(UnAnsQuestion, {\n            obj: this.props.questions[item]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n} //<Question id={answeredQ} />\n\n\nconst mapStateToProps = state => {\n  //  console.log(\"i want to see the state content\", state);\n  console.log(\"data to home\", state.home); // console.log(\"data from user\", state.login);\n\n  return {\n    users: state.login.users,\n    questions: state.home.questions,\n    loggeduser: state.login.loggeduser //   images: Object.keys(state.login.users.avatarURL)\n\n  };\n};\n\nconst mapDispatchToProps = {\n  getQuestionsAction,\n  receiveQuestions,\n  getAllUsersAction,\n  receiveUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["C:/Users/menna/OneDrive/Documents/reactnd-project-would-you-rather-starter-master/reactnd-project-would-you-rather-starter-master/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","getQuestionsAction","receiveQuestions","getAllUsersAction","receiveUsers","AnsQuestion","UnAnsQuestion","NavBar","Home","state","unansweredQ","hide","unanswered","user","setState","i","props","questions","answers","undefined","push","componentDidMount","answered","console","log","window","location","href","fulUrl","lastSlash","lastIndexOf","id","substr","match","params","render","Id","loggeduser","users","name","Object","keys","map","answeredQ","item","mapStateToProps","home","login","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,iBAArD;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBU,KADyB,GACjB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,IAAI,EAAE;AAFF,KADiB;;AAAA,SA4BzBC,UA5ByB,GA4BXC,IAAD,IAAU;AACnB;AACA;AACA,YAAMD,UAAU,GAAG,EAAnB;AACA,WAAKE,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAd;;AAGA,WAAK,MAAMI,CAAX,IAAgB,KAAKC,KAAL,CAAWC,SAA3B,EAAsC;AAClC;AACA;AACA,YAAIJ,IAAI,CAACK,OAAL,CAAaH,CAAb,MAAoBI,SAAxB,EAAmC;AAC/B;AACAP,UAAAA,UAAU,CAACQ,IAAX,CAAgBL,CAAhB;AAEH;AACJ,OAfkB,CAgBnB;;;AACA,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAEE;AAAf,OAAd;AAGH,KAhDwB;AAAA;;AAMzBS,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,UAAMC,MAAM,GAAGH,MAAM,CAACC,QAAP,CAAgBC,IAA/B;AACA,UAAME,SAAS,GAAGD,MAAM,CAACE,WAAP,CAAmB,GAAnB,CAAlB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;AACA,UAAME,EAAE,GAAGH,MAAM,CAACI,MAAP,CAAeH,SAAS,GAAG,CAA3B,CAAX,CAPgB,CAQhB;AACA;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwBH,EAApC,EAVgB,CAWhB;AACA;AACA;AACA;;AACA,SAAKf,KAAL,CAAWb,iBAAX,GAfgB,CAgBhB;;AACA,SAAKa,KAAL,CAAWf,kBAAX,GAjBgB,CAkBhB;AAGH;;AAwBDkC,EAAAA,MAAM,GAAG;AACL,UAAMC,EAAE,GAAG,KAAKpB,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwBH,EAAnC,CADK,CAEL;AACA;;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,KAAKR,KAAL,CAAWqB,UAAtD;AACA,QAAIxB,IAAI,GAAG,KAAKG,KAAL,CAAWsB,KAAX,CAAiB,KAAKtB,KAAL,CAAWqB,UAA5B,CAAX,CALK,CAML;AACA;;AACA,wBACI;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,8BAAWxB,IAAI,CAAC0B,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAA,kBACO,KAAKvB,KAAL,CAAWC,SAAX,KAAyBE,SAA1B,IAAyC,KAAKV,KAAL,CAAWE,IAAX,KAAoB,KAA9D,IACG6B,MAAM,CAACC,IAAP,CAAY5B,IAAI,CAACK,OAAjB,EAA0BwB,GAA1B,CAA+BC,SAAD,iBAC1B;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,GAAG,EAAE,KAAK3B,KAAL,CAAWC,SAAX,CAAqB0B,SAArB,CAAlB;AAAmD,YAAA,IAAI,EAAE9B,IAAI,CAACK,OAAL,CAAayB,SAAb;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,SAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cALJ,eAgBI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAK/B,UAAL,CAAgBC,IAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI;AAAA,kBACM,KAAKG,KAAL,CAAWC,SAAX,KAAyBE,SAA1B,IACG,KAAKV,KAAL,CAAWC,WAAX,CAAuBgC,GAAvB,CAA4BE,IAAD,iBACvB;AAAA,iCACI,QAAC,aAAD;AAAe,YAAA,GAAG,EAAE,KAAK5B,KAAL,CAAWC,SAAX,CAAqB2B,IAArB;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH;;AA3FwB,C,CA8F7B;;;AACA,MAAMC,eAAe,GAAIpC,KAAD,IAAW;AAC/B;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bf,KAAK,CAACqC,IAAlC,EAF+B,CAG/B;;AAEA,SAAO;AACHR,IAAAA,KAAK,EAAE7B,KAAK,CAACsC,KAAN,CAAYT,KADhB;AAEHrB,IAAAA,SAAS,EAAER,KAAK,CAACqC,IAAN,CAAW7B,SAFnB;AAGHoB,IAAAA,UAAU,EAAE5B,KAAK,CAACsC,KAAN,CAAYV,UAHrB,CAIH;;AAJG,GAAP;AAMH,CAXD;;AAaA,MAAMW,kBAAkB,GAAG;AACvB/C,EAAAA,kBADuB;AAEvBC,EAAAA,gBAFuB;AAGvBC,EAAAA,iBAHuB;AAIvBC,EAAAA;AAJuB,CAA3B;AAMA,eAAeJ,OAAO,CAAC6C,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CxC,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getQuestionsAction, receiveQuestions } from '../actions/home'\r\nimport { getAllUsersAction, receiveUsers } from '../actions/login'\r\nimport AnsQuestion from './AnsQuestion'\r\nimport UnAnsQuestion from './UnAnsQuestion'\r\nimport NavBar from './NavBar'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        unansweredQ: [],\r\n        hide: false\r\n\r\n    }\r\n    componentDidMount() {\r\n        //get the user id from the adress link\r\n        const answered = [];\r\n        console.log(window.location.href);\r\n        const fulUrl = window.location.href;\r\n        const lastSlash = fulUrl.lastIndexOf(\"/\");\r\n        console.log(lastSlash);\r\n        const id = fulUrl.substr((lastSlash + 1));\r\n        //  console.log(\"id in home\", id);\r\n        //or simply\r\n        console.log(this.props.match.params.id);\r\n        //get all users data\r\n        //  this.props.getAllUsersAction();\r\n        //get specific user data using id \r\n        //console.log(\"component did mount home call\");\r\n        this.props.getAllUsersAction()\r\n        // console.log(\"users in home total\", this.props.users);\r\n        this.props.getQuestionsAction();\r\n        //console.log(\"users in home total\", this.props.questions);\r\n\r\n\r\n    }\r\n    unanswered = (user) => {\r\n        // console.log(\"data in side function\", this.props.questions);\r\n        // console.log(\"answered data\", user.answers);\r\n        const unanswered = [];\r\n        this.setState({ hide: true })\r\n\r\n\r\n        for (const i in this.props.questions) {\r\n            //  console.log(\"each un answered question\", i);\r\n            //  console.log(\"each un answered question option\", this.props.questions[i]);\r\n            if (user.answers[i] === undefined) {\r\n                //    console.log(\"this is an unswered question\");\r\n                unanswered.push(i);\r\n\r\n            }\r\n        }\r\n        // console.log(\"the un answered ttt\", unanswered);\r\n        this.setState({ unansweredQ: unanswered })\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const Id = this.props.match.params.id\r\n        //  console.log(\"my try id\", Id);\r\n        // console.log(\"data in home total\", this.props.users[Id]);\r\n        console.log(\"the user saved to the store\", this.props.loggeduser);\r\n        let user = this.props.users[this.props.loggeduser];\r\n        // console.log(\"my user\", user);\r\n        // console.log(\"questions\", this.props.questions);\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <p>welcome{user.name} </p>\r\n                <button >answered</button>\r\n\r\n                <div>\r\n                    {((this.props.questions !== undefined) && (this.state.hide === false)) && (\r\n                        Object.keys(user.answers).map((answeredQ) => (\r\n                            <div key={answeredQ}>\r\n                                <AnsQuestion obj={this.props.questions[answeredQ]} vote={user.answers[answeredQ]} />\r\n                            </div>\r\n                        ))\r\n                    )}\r\n                </div>\r\n\r\n\r\n                <button onClick={() => this.unanswered(user)}>unanswered</button>\r\n                <div>\r\n                    {(this.props.questions !== undefined) && (\r\n                        this.state.unansweredQ.map((item) => (\r\n                            <div key={item}>\r\n                                <UnAnsQuestion obj={this.props.questions[item]} />\r\n                            </div>\r\n                        ))\r\n                    )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n//<Question id={answeredQ} />\r\nconst mapStateToProps = (state) => {\r\n    //  console.log(\"i want to see the state content\", state);\r\n    console.log(\"data to home\", state.home);\r\n    // console.log(\"data from user\", state.login);\r\n\r\n    return {\r\n        users: state.login.users,\r\n        questions: state.home.questions,\r\n        loggeduser: state.login.loggeduser,\r\n        //   images: Object.keys(state.login.users.avatarURL)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getQuestionsAction,\r\n    receiveQuestions,\r\n    getAllUsersAction,\r\n    receiveUsers\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)"]},"metadata":{},"sourceType":"module"}