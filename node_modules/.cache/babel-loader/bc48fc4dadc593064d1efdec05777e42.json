{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\menna\\\\OneDrive\\\\Documents\\\\reactnd-project-would-you-rather-starter-master\\\\reactnd-project-would-you-rather-starter-master\\\\would-you-rather\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getQuestionsAction, receiveQuestions } from '../actions/home';\nimport { getAllUsersAction, receiveUsers } from '../actions/login';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answeredquestions: []\n    };\n  }\n\n  componentDidMount() {\n    //get the user id from the adress link\n    const answered = [];\n    console.log(window.location.href);\n    const fulUrl = window.location.href;\n    const lastSlash = fulUrl.lastIndexOf(\"/\");\n    console.log(lastSlash);\n    const id = fulUrl.substr(lastSlash + 1); //  console.log(\"id in home\", id);\n    //or simply\n\n    console.log(this.props.match.params.id); //get all users data\n    //  this.props.getAllUsersAction();\n    //get specific user data using id \n\n    console.log(\"component did mount home call\");\n    this.props.getAllUsersAction(); // console.log(\"users in home total\", this.props.users);\n\n    this.props.getQuestionsAction();\n    console.log(\"users in home total\", this.props.questions);\n\n    for (const i in this.props.questions) {\n      console.log(\"each question\", i);\n    }\n  }\n\n  render() {\n    const Id = this.props.match.params.id; //  console.log(\"my try id\", Id);\n    // console.log(\"data in home total\", this.props.users[Id]);\n\n    let user = this.props.users[Id]; //  console.log(\"my user\", user);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"welcome\", user.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"answered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(user.answers).map(answeredQ => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            id: answeredQ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, answeredQ, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"unanswered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  if (state.home !== undefined) {\n    console.log(\"data to home\", state.home);\n\n    for (const i in this.state.home.questions) {\n      console.log(\"each question\", i);\n    }\n  }\n\n  return {\n    users: state.login.users,\n    questions: state.home.questions //   images: Object.keys(state.login.users.avatarURL)\n\n  };\n};\n\nconst mapDispatchToProps = {\n  getQuestionsAction,\n  receiveQuestions,\n  getAllUsersAction,\n  receiveUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["C:/Users/menna/OneDrive/Documents/reactnd-project-would-you-rather-starter-master/reactnd-project-would-you-rather-starter-master/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","getQuestionsAction","receiveQuestions","getAllUsersAction","receiveUsers","Question","Home","state","answeredquestions","componentDidMount","answered","console","log","window","location","href","fulUrl","lastSlash","lastIndexOf","id","substr","props","match","params","questions","i","render","Id","user","users","name","Object","keys","answers","map","answeredQ","mapStateToProps","home","undefined","login","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    getQuestionsAction, receiveQuestions\r\n} from '../actions/home'\r\nimport { getAllUsersAction, receiveUsers } from '../actions/login'\r\nimport Question from './Question'\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        answeredquestions: []\r\n    }\r\n    componentDidMount() {\r\n        //get the user id from the adress link\r\n        const answered = [];\r\n        console.log(window.location.href);\r\n        const fulUrl = window.location.href;\r\n        const lastSlash = fulUrl.lastIndexOf(\"/\");\r\n        console.log(lastSlash);\r\n        const id = fulUrl.substr((lastSlash + 1));\r\n        //  console.log(\"id in home\", id);\r\n        //or simply\r\n        console.log(this.props.match.params.id);\r\n        //get all users data\r\n        //  this.props.getAllUsersAction();\r\n        //get specific user data using id \r\n        console.log(\"component did mount home call\");\r\n        this.props.getAllUsersAction()\r\n        // console.log(\"users in home total\", this.props.users);\r\n        this.props.getQuestionsAction();\r\n        console.log(\"users in home total\", this.props.questions);\r\n        for (const i in this.props.questions) {\r\n            console.log(\"each question\", i);\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const Id = this.props.match.params.id\r\n        //  console.log(\"my try id\", Id);\r\n        // console.log(\"data in home total\", this.props.users[Id]);\r\n        let user = this.props.users[Id];\r\n        //  console.log(\"my user\", user);\r\n        return (\r\n            <div>\r\n                <p>welcome{user.name} </p>\r\n                <button>answered</button>\r\n\r\n                <ul>\r\n                    {Object.keys(user.answers).map((answeredQ) => (\r\n                        <li key={answeredQ}>\r\n                            <Question id={answeredQ} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                <button>unanswered</button>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    if (state.home !== undefined) {\r\n        console.log(\"data to home\", state.home);\r\n        for (const i in this.state.home.questions) {\r\n            console.log(\"each question\", i);\r\n        }\r\n    }\r\n    return {\r\n        users: state.login.users,\r\n        questions: state.home.questions,\r\n        //   images: Object.keys(state.login.users.avatarURL)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getQuestionsAction,\r\n    receiveQuestions,\r\n    getAllUsersAction,\r\n    receiveUsers\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)"]},"metadata":{},"sourceType":"module"}